{"version":3,"sources":["useInterval.js","Timer/Timer.js","Main/Main.js","App.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Timer","sessionValue","breakValue","value","resetValue","useState","isBreakOn","setIsBreakOn","minute","setMinute","isRunning","setIsRunning","second","setSecond","rightCircleDeg","setRightCircleDeg","leftCircleDeg","setleftCircleDeg","beep","Audio","play","progressSpeed","className","style","transform","onClick","Menu","props","isMenuOn","setIsMenuOn","setBreakValue","setSessionValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b08ae73e.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    const tick = () => {\n      savedCallback.current();\n    };\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import { useState, useEffect } from 'react';\nimport { useInterval } from '../useInterval';\nimport './Timer.css';\nconst beepSound =\n  'https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav';\n\nconst Timer = ({ sessionValue, breakValue, value, resetValue }) => {\n  const [isBreakOn, setIsBreakOn] = useState(false);\n  const [minute, setMinute] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [second, setSecond] = useState(0);\n  const [rightCircleDeg, setRightCircleDeg] = useState(-135);\n  const [leftCircleDeg, setleftCircleDeg] = useState(-135);\n  const beep = new Audio(beepSound);\n\n  useEffect(() => {\n    setMinute(!isBreakOn ? sessionValue : breakValue);\n  }, [sessionValue, breakValue]);\n\n  useEffect(() => {\n    if (isBreakOn && isRunning && minute === 0) {\n      beep.play();\n    }\n  });\n\n  useInterval(\n    () => {\n      if (second === 0) {\n        if (minute !== 0) {\n          setSecond(59);\n          setMinute(minute - 1);\n        } else {\n          setIsBreakOn(!isBreakOn);\n          setMinute(isBreakOn ? sessionValue : breakValue);\n        }\n      } else {\n        setSecond(second - 1);\n      }\n    },\n    isRunning ? 1000 : null\n  );\n\n  let progressSpeed = 360 / (sessionValue * 60);\n  // console.log(progressSpeed);\n  useInterval(\n    () => {\n      if (!isBreakOn) {\n        if (minute * 60 + second > (sessionValue * 60) / 2) {\n          setRightCircleDeg(rightCircleDeg + progressSpeed);\n          setleftCircleDeg(-135);\n          if (minute * 60 + second === sessionValue) {\n            setRightCircleDeg(-135);\n            setleftCircleDeg(-135);\n          }\n          if (minute * 60 + second === breakValue) {\n            setRightCircleDeg(45);\n            setleftCircleDeg(45);\n          }\n        }\n        if (minute * 60 + second <= (sessionValue * 60) / 2) {\n          setleftCircleDeg(leftCircleDeg + progressSpeed);\n          setRightCircleDeg(45);\n          if (minute * 60 + second === 0) {\n            setRightCircleDeg(-135);\n            setleftCircleDeg(-135);\n          }\n        }\n      } else {\n        setRightCircleDeg(-135);\n        setleftCircleDeg(-135);\n      }\n    },\n    isRunning ? 1000 : null\n  );\n\n  const reset = () => {\n    setIsRunning(false);\n    setIsBreakOn(false);\n    setMinute(value.sessionValue);\n    setSecond(0);\n    resetValue();\n    setleftCircleDeg(-135);\n    setRightCircleDeg(-135);\n  };\n\n  return (\n    <div className=\"clock-container\">\n      <div className=\"progress-circle\">\n        <div className=\"right\">\n          <div\n            className=\"rightcircle\"\n            style={{ transform: `rotate(${rightCircleDeg}deg)` }}\n          ></div>\n        </div>\n        <div className=\"left\">\n          <div\n            className=\"leftcircle\"\n            style={{ transform: `rotate(${leftCircleDeg}deg)` }}\n          ></div>\n        </div>\n      </div>\n      <div className=\"text\">\n        {!isBreakOn ? 'Keep working!' : 'Take a break!'}\n      </div>\n      <div className=\"time\">\n        {minute < 10 ? `0${minute}` : minute}:\n        {second < 10 ? `0${second}` : second}\n      </div>\n      <button className=\"btn start\" onClick={() => setIsRunning(true)}>\n        <i className=\"fas fa-play\"></i>\n      </button>\n      <button className=\"btn pause\" onClick={() => setIsRunning(false)}>\n        <i className=\"fas fa-pause\"></i>\n      </button>\n      <button className=\"btn reset\" onClick={() => reset()}>\n        <i className=\"fas fa-undo\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Timer;\n","import { useState } from 'react';\nimport Timer from '../Timer/Timer';\nimport './Main.css';\n\nconst Menu = (props) => {\n  const [isMenuOn, setIsMenuOn] = useState(false);\n  const [breakValue, setBreakValue] = useState(props.value.breakValue);\n  const [sessionValue, setSessionValue] = useState(props.value.sessionValue);\n\n  const resetValue = () => {\n    setSessionValue(25);\n    setBreakValue(5);\n  };\n  const breakValuePlusHander = () => {\n    setBreakValue(breakValue + 1);\n    if (breakValue >= 5) {\n      setBreakValue(5);\n    }\n  };\n\n  const breakValueMinusHander = () => {\n    setBreakValue(breakValue - 1);\n    if (breakValue <= 1) {\n      setBreakValue(1);\n    }\n  };\n\n  const sessionValuePlusHander = () => {\n    setSessionValue(sessionValue + 1);\n    if (sessionValue >= 25) {\n      setSessionValue(25);\n    }\n  };\n\n  const sessionValueMinusHander = () => {\n    setSessionValue(sessionValue - 1);\n    if (sessionValue <= 1) {\n      setSessionValue(1);\n    }\n  };\n  return (\n    <>\n      <Timer\n        sessionValue={sessionValue}\n        breakValue={breakValue}\n        value={props.value}\n        resetValue={resetValue}\n      />\n\n      <div className=\"setting-menu\">\n        <button className=\"btn menu\" onClick={() => setIsMenuOn(!isMenuOn)}>\n          <i className=\"fas fa-bars\"></i>\n        </button>\n        {isMenuOn && (\n          <div className=\"control\">\n            <div className=\"control-pad\">\n              <h4>Break Length</h4>\n              <button className=\"btn minus\" onClick={breakValueMinusHander}>\n                <i className=\"fas fa-minus\"></i>\n              </button>\n              <h4>{breakValue}</h4>\n              <button className=\"btn plus\" onClick={breakValuePlusHander}>\n                <i className=\"fas fa-plus\"></i>\n              </button>\n            </div>\n            <div className=\"control-pad\">\n              <h4>Session Length</h4>\n              <button className=\"btn minus\" onClick={sessionValueMinusHander}>\n                <i className=\"fas fa-minus\"></i>\n              </button>\n              <h4>{sessionValue}</h4>\n              <button className=\"btn plus\" onClick={sessionValuePlusHander}>\n                <i className=\"fas fa-plus\"></i>\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Menu;\n","import Main from './Main/Main';\n\nfunction App() {\n  const value = {\n    sessionValue: 25,\n    breakValue: 5,\n  };\n  return (\n    <>\n      <Main value={value} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}